var searchIndex = JSON.parse('{\
"dydll":{"doc":"","t":[5],"n":["main"],"q":["dydll"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"libfoo":{"doc":"","t":[5,5,5],"n":["get_module_value","get_the_value","inline_the_value"],"q":["libfoo","",""],"d":["","",""],"i":[0,0,0],"f":[[[],["u32",15]],[[],["u32",15]],[[],["u32",15]]],"p":[]},\
"wintls":{"doc":"Creates static thread-locals for Windows binaries.","t":[3,3,11,11,11,11,11,11,11,11,0,11,11,11,14,14,11,11,0,11,14,14,14,14,11,11,11,11,11,11,14,13,4,13,11,11,11,11,5,11,11,5,5,11,11,11,11,7,5,14,14,5,14,14,5,14,14,14,14,5,14,14,5,5],"n":["StaticThreadLocal","UnsafeLocal","as_ptr","as_ref","as_ref_mut","borrow","borrow","borrow_mut","borrow_mut","drop_value","dtor","from","from","get","get_static","init_static","into","into","raw","set","set_static","static_key","static_ptr","static_thread_local","try_from","try_from","try_into","try_into","type_id","type_id","unsafe_local","Dropping","DtorState","Passive","borrow","borrow_mut","clone","clone_into","drop_locals","from","into","register_dtor","state","to_owned","try_from","try_into","type_id","_tls_index","get_static","get_static","get_static","get_static_from_module","init_static","init_static","set_static","set_static","set_static","static_key","static_key","static_ptr","static_ptr","static_ptr","static_ptr_from_module","tls_array"],"q":["wintls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wintls::dtor","","","","","","","","","","","","","","","","wintls::raw","","","","","","","","","","","","","","","",""],"d":["Enables setting or getting a static thread local value.","Grants unsafe access to the thread local.","Getting a pointer is safe. Using it should be mostly safe …","There can be many shared references but there must not be …","There can only be one mutable reference at a time and …","","","","","Drops the memory. No further use of the memory should …","Register thread local destructors","","","Returns the value of the the thread local.","Convenience macro for getting the static thread-local …","Initialize a <code>static</code> as a thread-local.","","","Low level primitives for building static thread-local …","Sets the value of the the thread local.","Convenience macro for setting the static thread-local …","Returns a key that identifies the thread local.","Convenience macro for getting a static thread-local …","Statically initialize a thread local.","","","","","","","Create an <code>UnsafeLocal</code>.","Destructors are currently being run.","","Passively waiting to run destructors, either when the …","","","","","Runs the thread local drops.","","","Register a destructor for a thread local on this thread …","Returns the current <code>DtorState</code>.","","","","","The offset (divided by 8) into the static thread local …","Returns the value of a static thread-local.","Convenience macro for getting the static thread-local …","Convenience macro for getting the static thread-local …","","Initialize a <code>static</code> as a thread-local.","Initialize a <code>static</code> as a thread-local.","Sets a static thread-local value.","Convenience macro for setting the static thread-local …","Convenience macro for setting the static thread-local …","Returns a key that identifies the thread local.","Returns a key that identifies the thread local.","Returns a mutable pointer to a tls value.","Convenience macro for getting a static thread-local …","Convenience macro for getting a static thread-local …","","Returns a pointer to thread-local memory for the current …"],"i":[0,0,1,1,1,2,1,2,1,1,0,2,1,2,0,0,2,1,0,2,0,0,0,0,2,1,2,1,2,1,0,3,0,3,3,3,3,3,0,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,[[]],[[]],null,[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[],["dtorstate",4]],[[]],[[]],[[]],[[]],[[]],[[],["dtorstate",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["u32",15]],["copy",8]],null,null,[[["u32",15]],["copy",8]],null,null,[[["u32",15]]],null,null,null,null,[[["u32",15]]],null,null,[[["u32",15]]],[[]]],"p":[[3,"UnsafeLocal"],[3,"StaticThreadLocal"],[4,"DtorState"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};